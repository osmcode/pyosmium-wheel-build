env:
    global:
        - REPO_DIR=pyosmium
        # Commit from your-project that you want to build
        # commented so we manually set, which version to build
        # BUILD_COMMIT requires following line in install section: 
        # - clean_code $REPO_DIR $BUILD_COMMIT
        # - BUILD_COMMIT=master
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS=""
        # pip dependencies to _test_ your project.  Include any dependencies
        # that you need, that are also specified in BUILD_DEPENDS, this will be
        # a separate install.
        - TEST_DEPENDS="nose mock"
        - PLAT=x86_64
        - UNICODE_WIDTH=32
        - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
        # manylinux version to build (1, 2010 or 2014)
        - MB_ML_VER=2010

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

branches:
  except:
    - /^untagged-.*/

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    # Manylinux1
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        - PLAT=i686
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - MB_ML_VER=1
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
        - MB_ML_VER=1
    # Manylinux2010 (default)
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
    # macOS wheels
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.8

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

deploy:
  provider: releases
  skip_cleanup: true
  file: "wheelhouse/*whl"
  file_glob: true
  api_key: ${GITHUB_API_KEY}
  on:
    branch: master
